

syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "grpc/reflection/v1alpha/reflection.proto";

package io.oneagent.api;


message StringKey {
    string key = 1;
}

message StringValue {
    string value = 1;
}

message Properties {
    map<string, string> properties = 1;
}

message Envs {
    map<string, string> env = 1;
}

service SystemProperty {
    rpc get(google.protobuf.Empty) returns (Properties);
    rpc getByKey(StringKey) returns (StringValue);
    rpc update(Properties) returns (Properties);
}

service SystemEnv {
    rpc get(google.protobuf.Empty) returns (Envs);
    rpc getByKey(StringKey) returns (StringValue);
}

service OneAgentInfo {
    rpc appName(google.protobuf.Empty) returns (StringValue);
    rpc version(google.protobuf.Empty) returns (StringValue);
    rpc config(google.protobuf.Empty) returns (Properties);
}

service ServerReflection {
  // https://github.com/grpc/grpc-java/blob/v1.54.0/services/src/main/proto/grpc/reflection/v1alpha/reflection.proto
  // 简化为无 stream 版本，因为grpc web不支持client stream
  // 使用 grpc.reflection.v1alpha 的 package，因为 grpc的 java jar包里仍是这个package name
  rpc ServerReflectionInfo( grpc.reflection.v1alpha.ServerReflectionRequest) returns (grpc.reflection.v1alpha.ServerReflectionResponse);
}
